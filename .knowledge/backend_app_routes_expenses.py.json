{"is_source_file": true, "format": "Python", "description": "This file implements API endpoints for managing expenses within groups, including creating, retrieving, updating, deleting expenses, handling expense shares, and enforcing group membership constraints. It utilizes Flask with flask_smorest, schemas for validation, and ORM models for database interaction.", "external_files": ["from .. import db", "from ..models import Expense, ExpenseShare, Group, GroupMember, User", "from ..schemas import ExpenseSchema, ExpenseShareSchema"], "external_methods": ["db.session.add", "db.session.delete", "db.session.commit", "Group.query.get", "Expense.query.filter_by", "Expense.query.get", "ExpenseShare.query.filter_by", "abort"], "published": ["ShareInputSchema", "ExpenseCreateSchema", "ExpenseUpdateSchema", "GroupExpensesCollection", "ExpenseItem", "ExpenseShareSettle"], "classes": [{"name": "ShareInputSchema", "description": "Schema for inputting user shares with user_id and amount fields."}, {"name": "ExpenseCreateSchema", "description": "Schema for creating a new expense with description, amount, paid_by_user_id, expense_date, and optional shares list."}, {"name": "ExpenseUpdateSchema", "description": "Schema for updating expense fields, supporting partial updates."}, {"name": "GroupExpensesCollection", "description": "Endpoint for listing and creating expenses within a group."}, {"name": "ExpenseItem", "description": "Endpoint for retrieving, updating, and deleting a specific expense."}, {"name": "ExpenseShareSettle", "description": "Endpoint for settling a specific expense share."}], "methods": [{"name": "Decimal _to_decimal(value)", "description": "Converts a value to a Decimal, raising ValidationError if invalid.", "scope": "", "scopeKind": ""}, {"name": "None _ensure_user_in_group(group_id: int, user_id: Optional[int])", "description": "Checks if a user belongs to a group, aborting with 400 if not.", "scope": "", "scopeKind": ""}, {"name": "List[ExpenseShare] _equal_split(amount: Decimal, user_ids: List[int])", "description": "Splits a total amount equally among user IDs, handling remainders for rounding.", "scope": "", "scopeKind": ""}, {"name": "None _replace_shares(expense: Expense, new_shares: List[dict])", "description": "Replaces existing shares of an expense with new shares, validating total and user membership.", "scope": "", "scopeKind": ""}, {"name": "delete(self, expense_id: int)", "scope": "ExpenseItem", "scopeKind": "class", "description": "unavailable"}, {"name": "get(self, expense_id: int)", "scope": "ExpenseItem", "scopeKind": "class", "description": "unavailable"}, {"name": "get(self, group_id: int)", "scope": "GroupExpensesCollection", "scopeKind": "class", "description": "unavailable"}, {"name": "patch(self, data, expense_id: int)", "scope": "ExpenseItem", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self, data, group_id: int)", "scope": "GroupExpensesCollection", "scopeKind": "class", "description": "unavailable"}, {"name": "post(self, expense_id: int, share_id: int)", "scope": "ExpenseShareSettle", "scopeKind": "class", "description": "unavailable"}, {"name": "validate_shares(self, data, **kwargs)", "scope": "ExpenseCreateSchema", "scopeKind": "class", "description": "unavailable"}], "calls": ["db.session.add", "db.session.delete", "db.session.commit", "Group.query.get", "Expense.query.filter_by", "Expense.query.get", "ExpenseShare.query.filter_by", "abort", "GroupMember.query.filter_by", "GroupMember.query.filter_by", "GroupMember.query.filter_by", "ExpenseShare.query.filter_by"], "search-terms": ["expenses.py", "Expense", "ExpenseShare", "GroupExpensesCollection", "ExpenseItem", "ShareInputSchema", "ExpenseCreateSchema", "ExpenseUpdateSchema", "settlingshare", "group expenses endpoint"], "state": 2, "file_id": 12, "knowledge_revision": 26, "git_revision": "", "ctags": [{"_type": "tag", "name": "ExpenseCreateSchema", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^class ExpenseCreateSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ExpenseItem", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^class ExpenseItem(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ExpenseShareSettle", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^class ExpenseShareSettle(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ExpenseUpdateSchema", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^class ExpenseUpdateSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "GroupExpensesCollection", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^class GroupExpensesCollection(MethodView):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "ShareInputSchema", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^class ShareInputSchema(Schema):$/", "language": "Python", "kind": "class"}, {"_type": "tag", "name": "_ensure_user_in_group", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^def _ensure_user_in_group(group_id: int, user_id: Optional[int]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(group_id: int, user_id: Optional[int])"}, {"_type": "tag", "name": "_equal_split", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^def _equal_split(amount: Decimal, user_ids: List[int]) -> List[ExpenseShare]:$/", "language": "Python", "typeref": "typename:List[ExpenseShare]", "kind": "function", "signature": "(amount: Decimal, user_ids: List[int])"}, {"_type": "tag", "name": "_replace_shares", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^def _replace_shares(expense: Expense, new_shares: List[dict]) -> None:$/", "language": "Python", "typeref": "typename:None", "kind": "function", "signature": "(expense: Expense, new_shares: List[dict])"}, {"_type": "tag", "name": "_to_decimal", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^def _to_decimal(value) -> Decimal:$/", "language": "Python", "typeref": "typename:Decimal", "kind": "function", "signature": "(value)"}, {"_type": "tag", "name": "amount", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    amount = fields.Decimal(as_string=True, required=False)$/", "language": "Python", "kind": "variable", "scope": "ExpenseUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "amount", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    amount = fields.Decimal(as_string=True, required=True)$/", "language": "Python", "kind": "variable", "scope": "ExpenseCreateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "amount", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    amount = fields.Decimal(as_string=True, required=True, description=\"Amount for this user's s/", "language": "Python", "kind": "variable", "scope": "ShareInputSchema", "scopeKind": "class"}, {"_type": "tag", "name": "blp", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^blp = Blueprint($/", "language": "Python", "kind": "variable"}, {"_type": "tag", "name": "delete", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    def delete(self, expense_id: int):$/", "language": "Python", "kind": "member", "signature": "(self, expense_id: int)", "scope": "ExpenseItem", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    description = fields.String(required=False, validate=validate.Length(min=1, max=255))$/", "language": "Python", "kind": "variable", "scope": "ExpenseUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "description", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    description = fields.String(required=True, validate=validate.Length(min=1, max=255))$/", "language": "Python", "kind": "variable", "scope": "ExpenseCreateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "expense_date", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    expense_date = fields.DateTime(allow_none=True)$/", "language": "Python", "kind": "variable", "scope": "ExpenseCreateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "expense_date", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    expense_date = fields.DateTime(allow_none=True, required=False)$/", "language": "Python", "kind": "variable", "scope": "ExpenseUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    def get(self, expense_id: int):$/", "language": "Python", "kind": "member", "signature": "(self, expense_id: int)", "scope": "ExpenseItem", "scopeKind": "class"}, {"_type": "tag", "name": "get", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    def get(self, group_id: int):$/", "language": "Python", "kind": "member", "signature": "(self, group_id: int)", "scope": "GroupExpensesCollection", "scopeKind": "class"}, {"_type": "tag", "name": "paid_by_user_id", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    paid_by_user_id = fields.Integer(allow_none=True)$/", "language": "Python", "kind": "variable", "scope": "ExpenseCreateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "paid_by_user_id", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    paid_by_user_id = fields.Integer(allow_none=True, required=False)$/", "language": "Python", "kind": "variable", "scope": "ExpenseUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "patch", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    def patch(self, data, expense_id: int):$/", "language": "Python", "kind": "member", "signature": "(self, data, expense_id: int)", "scope": "ExpenseItem", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    def post(self, data, group_id: int):$/", "language": "Python", "kind": "member", "signature": "(self, data, group_id: int)", "scope": "GroupExpensesCollection", "scopeKind": "class"}, {"_type": "tag", "name": "post", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    def post(self, expense_id: int, share_id: int):$/", "language": "Python", "kind": "member", "signature": "(self, expense_id: int, share_id: int)", "scope": "ExpenseShareSettle", "scopeKind": "class"}, {"_type": "tag", "name": "shares", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    shares = fields.List(fields.Nested(ShareInputSchema), required=False)$/", "language": "Python", "kind": "variable", "scope": "ExpenseCreateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "shares", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    shares = fields.List(fields.Nested(ShareInputSchema), required=False)$/", "language": "Python", "kind": "variable", "scope": "ExpenseUpdateSchema", "scopeKind": "class"}, {"_type": "tag", "name": "user_id", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    user_id = fields.Integer(required=True, description=\"User id for this share\")$/", "language": "Python", "kind": "variable", "scope": "ShareInputSchema", "scopeKind": "class"}, {"_type": "tag", "name": "validate_shares", "path": "/home/kavia/workspace/code-generation/expense-splitter-with-receipts-158093-158103/backend/app/routes/expenses.py", "pattern": "/^    def validate_shares(self, data, **kwargs):$/", "language": "Python", "kind": "member", "signature": "(self, data, **kwargs)", "scope": "ExpenseCreateSchema", "scopeKind": "class"}], "hash": "3fe8f6bef1f911295b0d3b0c2d58a244", "format-version": 4, "code-base-name": "backend", "filename": "backend/app/routes/expenses.py", "fields": [{"name": "amount = fields.Decimal(as_string=True, required=False)", "scope": "ExpenseUpdateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "amount = fields.Decimal(as_string=True, required=True)", "scope": "ExpenseCreateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "amount = fields.Decimal(as_string=True, required=True, description=\"Amount for this user's s/", "scope": "ShareInputSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "blp = Blueprint(", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "description = fields.String(required=False, validate=validate.Length(min=1, max=255))", "scope": "ExpenseUpdateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "description = fields.String(required=True, validate=validate.Length(min=1, max=255))", "scope": "ExpenseCreateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "expense_date = fields.DateTime(allow_none=True)", "scope": "ExpenseCreateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "expense_date = fields.DateTime(allow_none=True, required=False)", "scope": "ExpenseUpdateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "paid_by_user_id = fields.Integer(allow_none=True)", "scope": "ExpenseCreateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "paid_by_user_id = fields.Integer(allow_none=True, required=False)", "scope": "ExpenseUpdateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "shares = fields.List(fields.Nested(ShareInputSchema), required=False)", "scope": "ExpenseCreateSchema", "scopeKind": "class", "description": "unavailable"}, {"name": "user_id = fields.Integer(required=True, description=\"User id for this share\")", "scope": "ShareInputSchema", "scopeKind": "class", "description": "unavailable"}], "revision_history": [{"26": ""}]}